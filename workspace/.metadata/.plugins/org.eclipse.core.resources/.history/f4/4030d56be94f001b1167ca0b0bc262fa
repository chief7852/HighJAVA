package kr.or.ddit.basic;

import java.util.HashSet;

public class SetTest {

	public static void main(String[] args) {
		/*
		 	- List와 Set의 차이점
		 1. List
		    - 데이터의 순서(index)가 있다.
		    - 중복되는 데이터를 저장할 수 있다.
		 2. Set
		 	- 데이터의 순서(index가 없다.
		 	- 중복되는 데이터를 저장할수 없다
		 */
		HashSet hs1 = new HashSet<>();
		
		//Set에 데이터를 추가할 때도 add()메서드를 사용한다.
		//add()메서드는 데이터 추가에 성공하면 true,
		//그렇지 않으면 false를 반환한다.
		hs1.add("DD");
		hs1.add("AA");
		hs1.add(2);
		hs1.add("CC");
		hs1.add("BB");
		hs1.add(1);
		hs1.add(3);
		
		System.out.println("Set의 개수 : " + hs1.size());
		System.out.println("Set의 데이터 : " + hs1);
		
		// Set에 데이터를 추가할 때 중복되면 false를 반환하고
		// 데이터 추가에 실패한다.
		boolean isAdd = hs1.add("FF");
		System.out.println("중복되지 않을때 : " + isAdd);
		System.out.println("Set데이터 : " + hs1);
		
		isAdd = hs1.add("CC");
		System.out.println("중복되지 않을때 : " + isAdd);
		System.out.println("Set데이터 : " + hs1);
		
		//Set의 데이터를 수정하려면 수정하는 명령이 따로 없기 때문에
		//해당자료를 삭제한 후 추가해 주어야한다.
		
		//자료 삭제 : remove(삭제할데이터)
		//  ==> 반환값 : 삭제 성공(true), 삭제 실패(false)
		
		//clear() ==> 전체 자료 삭제
		
		//"FF" 데이터를 "EE"로 변경하기
		hs1.remove("FF");
		System.out.println("삭제 후 : "+ hs1);
	}

}
