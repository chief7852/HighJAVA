package kr.or.ddit.basic;

import java.util.Vector;

public class VectorTest 
{

	public static void main(String[] args) 
	{
		// 객체 생성
		Vector v1 = new Vector();
		
		System.out.println("처음크기 : " + v1.size());
		
		// 데이터 추가 : add(추가할 데이터)
		// 반환값 : 추가성공(true), 실패(false)
		v1.add("aaa");
		v1.add(new Integer(111));		//숫자형은 형변환후에 사용해야한다.
		v1.add(123);	// ==> 오토박싱(기본자료형 ==> 랩퍼클래스형으로 자동변환)
						// ==> 오토언박싱 ( 랩퍼클래스형 ==> 기본자료형으로 자동변환)
		v1.add('a');
		v1.add(3.14);
		boolean chk = v1.add(true);
		
		System.out.println("현재 크기 : " + v1.size());
		System.out.println("반환값 : " + chk);
		
		//데이터 추가 : addElement(추가할 데이터)
		// ==> 이전 버전의 프로그램에서도 사용가능하도록 하기위해 남아있는 메서드
		v1.addElement("CCC");
		
		System.out.println("v1 ==> " + v1.toString());
		System.out.println("v1 ==> " + v1);				//toString 생략가능
		
		//데이터 추가 : add(index, 추가할 데이터)
		// ==> index번째에 '추가할데이터'를 끼워넣는다. (index는 0부터 시작한다)
		// ==> 반환값은 없다.
		v1.add(1,"kkk");
		System.out.println("v1 ==> " + v1);
		
		//데이터 수정 : set(index, 새로운데이터)
		// ==> index번째의 데이터를 '새로운데이터'로 덮어쓴다.
		// ==> 반환값 : 원래의 데이터
		String temp = (String)v1.set(1,"bbb");
		System.out.println("v1 = " + v1);
		System.out.println("반환값 : " + temp);
		
		//데이터 꺼내오기 : get(index)
		// ==> index번째의 데이터를 반환한다.
		int data = (int)v1.get(2);
		System.out.println("2번째 자료 : " + data);
		
		//데이터 삭제 : remove(index)
		// ==> index번째의 데이터를 삭제한다.
		// ==> 반환값 : 삭제된 데이터
		v1.remove(0);
		System.out.println("v1 => " + v1);
		
		temp = (String)v1.remove(0);
		System.out.println("v1 = " + v1);
		System.out.println("삭제된 데이터 :" + temp);
		
		//데이터 삭제 : remove(삭제할 데이터)
		// ==> '삭제할 데이터'를 찾아서 삭제한다.
		// ==> '삭제할 데이터'가 여러개이면 앞에서부터 삭제된다.
		// ==> 반환값 : 삭제성공(true), 삭제실패(false)
		v1.remove("CCC");
		System.out.println("삭제 후 v1 = " + v1);
		System.out.println("");
		
		
		
		
	}

}
